{"id":"073b2cf4-7b3d-4f7e-8954-6100a940e3b1","zed":"context","version":"0.4.0","text":"\n\n\n\n```ts settlers/packages/shared/src/lib/server/ServerPayloads.ts:1-34\n// Excerpt from: \nimport { ServerEvents } from './ServerEvents';\n\nexport type ServerPayloads = {\n  [ServerEvents.GameMessage]: {\n    color: string;\n    message: string;\n  };\n  // lobby state contains events about the lobby and the match\n  [ServerEvents.LobbyState]: {\n    lobbyId: string;\n    hasStarted: boolean;\n    hasEnded: boolean;\n    // currentRound: number;\n    // currentPlayerIndex: number;\n    players: Array<{\n      username: string;\n      color: string;\n    }>;\n  };\n  SETUP: {\n    currentPlayer: string;\n    availableActions: string[];\n    currentRound: number;\n    availableSpots: number[];\n    availableRoads: number[];\n  };\n  DICE_ROLL: {};\n  TURN: {};\n  BUILD: {};\n  TRADE: {};\n  ROBBERS: {};\n  GAME_END: {};\n};\n\n```\nhow can i declare a variable that can be any of the keys of the ServerPayloads object as type?\nThere are a few ways to get the keys of the ServerPayloads type as a union type:\n\n1. Using `keyof`:\n```typescript\ntype ServerPayloadKey = keyof ServerPayloads;\n```\n\n2. Or you can explicitly use it in a variable declaration:\n```typescript\nlet eventKey: keyof ServerPayloads;\n```\n\nThis will create a type that is a union of all the keys in ServerPayloads, which would be:\n`ServerEvents.GameMessage | ServerEvents.LobbyState | \"SETUP\" | \"DICE_ROLL\" | \"TURN\" | \"BUILD\" | \"TRADE\" | \"ROBBERS\" | \"GAME_END\"`\n\nYou can then use this type for variables that need to reference any of these event keys:\n\n```typescript\nconst someEvent: ServerPayloadKey = ServerEvents.GameMessage; // valid\nconst anotherEvent: ServerPayloadKey = \"SETUP\"; // also valid\nconst invalidEvent: ServerPayloadKey = \"INVALID\"; // Type error!\n```\n\nChoose the approach that best fits your needs. The `keyof` operator is particularly useful when you need to ensure type safety when working with the keys of your ServerPayloads type.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":35}}},{"id":{"replica_id":0,"value":12},"start":903,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":36}}},{"id":{"replica_id":0,"value":13},"start":1895,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":37}}}],"summary":"Type Keys from ServerPayloads Interface","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}