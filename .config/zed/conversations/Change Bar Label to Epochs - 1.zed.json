{"id":"e0df1d3b-8c6f-43f8-92ff-ecfbf3bf6ac6","zed":"context","version":"0.4.0","text":"\n\n\n\n```py crispy-fortnight/prove.py:1-53\n# Excerpt from: \n# %%\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# %%\naccuracies = [\n    {'epochs': 500,  'experiment': 1,   'tokenacc': 0.5490,  'sentacc':0.0426},\n    {'epochs': 500,  'experiment': 2,   'tokenacc': 0.6975,  'sentacc':0.1842},\n    {'epochs': 500,  'experiment': 4,   'tokenacc': 0.9181,  'sentacc':0.6631},\n    {'epochs': 300,  'experiment': 8,   'tokenacc': 0.9837,  'sentacc':0.9239},\n    {'epochs': 200,  'experiment': 16,  'tokenacc': 0.9937,  'sentacc':0.9738},\n    {'epochs': 50,  'experiment': 32,   'tokenacc': 0.9986,  'sentacc':0.9925},\n    {'epochs': 50,  'experiment': 64,   'tokenacc': 0.9991,  'sentacc':0.9948},\n\n    {'epochs': 50, 'experiment':1,      'tokenacc': 0.4275, 'sentacc': 0.0183},\n    {'epochs': 50, 'experiment':2,      'tokenacc': 0.6403, 'sentacc': 0.1357},\n    {'epochs': 50, 'experiment':4,      'tokenacc': 0.8249, 'sentacc': 0.4254},\n    {'epochs': 50, 'experiment':8,      'tokenacc': 0.9405, 'sentacc': 0.7406},\n    {'epochs': 50, 'experiment':16,     'tokenacc': 0.9880, 'sentacc': 0.9502},\n    {'epochs': 50, 'experiment':32,     'tokenacc': 0.9962, 'sentacc': 0.9856},\n    {'epochs': 50, 'experiment':64,     'tokenacc': 0.9989, 'sentacc': 0.9932},\n]\n\n# %%\nexperiments = ('1', '2', '4', '8', '16', '32', '64')\npenguin_means = {\n    '50 epochs ': ( 0.4275, 0.6403, 0.8249, 0.9405, 0.9880, 0.9962, 0.9989),\n    'variable epochs': ( 0.5490, 0.6975, 0.9181, 0.9837, 0.9937, 0.9986, 0.9991\n    )\n}\n\nx = np.arange(len(experiments))  # the label locations\nwidth = 0.25  # the width of the bars\nmultiplier = 0\n\nfig, ax = plt.subplots(layout='constrained')\n\nfor attribute, measurement in penguin_means.items():\n    offset = width * multiplier\n    rects = ax.bar(x + offset, measurement, width, label=attribute)\n    ax.bar_label(rects, padding=3)\n    multiplier += 1\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Accuracy (%)')\nax.set_title('Token accuracy for different epochs')\nax.set_xticks(x + width, experiments)\nax.legend(loc='upper left')\n\n\nplt.show()\n# %%\n\n```\n i  want to change the bar label to be the number of epochs \nTo change the bar labels to display the number of epochs, you can modify the `ax.bar_label` call to include the number of epochs. You can achieve this by creating a mapping of the number of epochs to the corresponding measurements and then using this mapping to set the bar labels.\n\nHere's the modified code:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\naccuracies = [\n    {'epochs': 500,  'experiment': 1,   'tokenacc': 0.5490,  'sentacc':0.0426},\n    {'epochs': 500,  'experiment': 2,   'tokenacc': 0.6975,  'sentacc':0.1842},\n    {'epochs': 500,  'experiment': 4,   'tokenacc': 0.9181,  'sentacc':0.6631},\n    {'epochs': 300,  'experiment': 8,   'tokenacc': 0.9837,  'sentacc':0.9239},\n    {'epochs': 200,  'experiment': 16,  'tokenacc': 0.9937,  'sentacc':0.9738},\n    {'epochs': 50,  'experiment': 32,   'tokenacc': 0.9986,  'sentacc':0.9925},\n    {'epochs': 50,  'experiment': 64,   'tokenacc': 0.9991,  'sentacc':0.9948},\n\n    {'epochs': 50, 'experiment':1,      'tokenacc': 0.4275, 'sentacc': 0.0183},\n    {'epochs': 50, 'experiment':2,      'tokenacc': 0.6403, 'sentacc': 0.1357},\n    {'epochs': 50, 'experiment':4,      'tokenacc': 0.8249, 'sentacc': 0.4254},\n    {'epochs': 50, 'experiment':8,      'tokenacc': 0.9405, 'sentacc': 0.7406},\n    {'epochs': 50, 'experiment':16,     'tokenacc': 0.9880, 'sentacc': 0.9502},\n    {'epochs': 50, 'experiment':32,     'tokenacc': 0.9962, 'sentacc': 0.9856},\n    {'epochs': 50, 'experiment':64,     'tokenacc': 0.9989, 'sentacc': 0.9932},\n]\n\n# Prepare data for plotting\nexperiments = ('1', '2', '4', '8', '16', '32', '64')\npenguin_means = {\n    '50 epochs': (0.4275, 0.6403, 0.8249, 0.9405, 0.9880, 0.9962, 0.9989),\n    'variable epochs': (0.5490, 0.6975, 0.9181, 0.9837, 0.9937, 0.9986, 0.9991)\n}\nepochs_mapping = {\n    '50 epochs': [50, 50, 50, 50, 50, 50, 50],\n    'variable epochs': [500, 500, 500, 300, 200, 50, 50]\n}\n\nx = np.arange(len(experiments))  # the label locations\nwidth = 0.25  # the width of the bars\nmultiplier = 0\n\nfig, ax = plt.subplots(layout='constrained')\n\nfor attribute, measurement in penguin_means.items():\n    offset = width * multiplier\n    rects = ax.bar(x + offset, measurement, width, label=attribute)\n    ax.bar_label(rects, labels=epochs_mapping[attribute], padding=3)\n    multiplier += 1\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Accuracy (%)')\nax.set_title('Token accuracy for different epochs')\nax.set_xticks(x + width, experiments)\nax.legend(loc='upper left')\n\nplt.show()\n```\n\nIn this modified code, the `epochs_mapping` dictionary is used to map the number of epochs to the corresponding measurements. The `ax.bar_label` function is then called with the `labels` parameter set to the appropriate list of epochs for each bar group. This will display the number of epochs as the bar labels.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":116}}},{"id":{"replica_id":0,"value":17},"start":2167,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":117}}},{"id":{"replica_id":0,"value":18},"start":5013,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":118}}}],"summary":"Change Bar Label to Epochs","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}